---
import type { CallToAction } from '~/types';

export interface Props {
  id?: string;
  title?: string;
  subtitle?: string;
  date?: string;
  countdownActions?: string;
  actions?: string | CallToAction[];
  imageGrid?: string;
}

const {
  id,
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  date = await Astro.slots.render('date'),
  countdownActions = await Astro.slots.render('countdownActions'),
  imageGrid = await Astro.slots.render('imageGrid'),
} = Astro.props;
---

<section class="relative -mt-[76px] lg:-mt-[96px] not-prose text-center pb-48" {...id ? { id } : {}}>
  {imageGrid && <div class="absolute inset-0 h-full top-0 left-0 right-0" aria-hidden="true" set:html={imageGrid} />}
  <div class="relative max-w-7xl mx-auto px-4 sm:px-6 pointer-events-none z-10">
    <!-- navbar space -->
    <div class="pt-[76px]"></div>
    <!-- title -->
    <div class="py-24 md:py-20 pb-10 md:pb-16 max-w-5xl mx-auto">
      {
        title && (
          <h1
            class="text-6xl md:text-[5rem] font-bold leading-tighter tracking-tight font-heading dark:text-gray-200"
            set:html={title}
          />
        )
      }
      {subtitle && <p class="text-xl text-muted dark:text-slate-300 m-12" set:html={subtitle} />}
    </div>
  </div>
  <div class="relative max-w-3xl mx-auto">
    {date && <p class="text-xl text-muted mb-6 dark:text-slate-300 z-20" set:html={date} />}
    {
      countdownActions && (
        <div
          class="flex flex-col items-center justify-center gap-y-4 mb-6 dark:text-slate-300"
          set:html={countdownActions}
        />
      )
    }
  </div>
</section>
